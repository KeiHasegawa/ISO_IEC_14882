/*
 * When a parameter of reference type binds directly (8.5.3) to an argument expression,
 * the implicit conversion sequence is the identity conversion, unless the argument
 * expression has a type that is a derived class of the parameter type, in which case
 * the implicit conversion sequence is a derived-to-base Conversion (13.3.3.1).
 */
#include <stdio.h>

struct A {};
struct B : public A {} b;
int f(A&);
int f(B&);
int i = f(b); // Calls f(B&), an exact match, rather than
              // f(A&), a conversion

int main()
{
  printf("i = %d\n", i);
  return 0;
}

int f(A&)
{
  printf("`f(A&)' called\n");
  return 0;
}

int f(B&)
{
  printf("`f(B&)' called\n");
  return 1;
}
