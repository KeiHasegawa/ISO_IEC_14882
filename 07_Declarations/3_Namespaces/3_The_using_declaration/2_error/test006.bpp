/*
 * All instances of the name mentioned in a using-declaration shall be
 * accessible. In particular, if a derived class uses a using-declaration to
 * access a member of a base class, the member name shall be accessible. If
 * the name is that of an overloaded member function, then all functions named
 * shall be accessible. The base class members mentioned by a using-declaration
 * shall be visible in the scope of at least one of the direct base classes of
 * the class where the using-declaration is specified.
 */
struct A { int x(); };

struct B : A { };

struct C : A {
  using A::x;
  int x(int);
};

struct D : B, C {
  using C::x;
  int x(double);
};

int f(D* d) {
  return d->x(); // ambiguous: B::x or C::x
}
