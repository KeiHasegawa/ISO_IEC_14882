/*
 * A non-type non-reference template-parameter is not an lvalue. It shall not
 * be assigned to or in any other way have its value changed. A non-type
 * non-reference template-parameter cannot have its address taken. When a
 * non-type non-reference template-parameter is used as an initializer for a
 * reference, a temporary is always used.
 */
class X {};

template<const X& x, int i> void f()
{
  i++; // error: change of template-parameter value
  &x; // OK
  &i; // error: address of non-reference template-parameter
  int& ri = i; // error: non-const reference bound to temporary
  const int& cri = i; // OK: const reference bound to temporary
}
