/*
 * Since a using-declaration is a declaration, the restrictions on declarations
 * of the same name in the same declarative region also apply to
 * using-declarations.
 */
namespace A {
  int x;
}

namespace B {
  int i;
  struct g { };
  struct x { };
  void f(int);
  void f(double);
  void g(char); // OK: hides struct g
}

void func()
{
  int i;
  using B::i; // error: i declared twice
  void f(char);
  using B::f; // OK: each f is a function
  f(3.5); //calls B::f(double)
  using B::g;
  g('a'); //calls B::g(char)
  struct g g1; // g1 has class type B::g
  using B::x;
  using A::x; // OK: hides struct B::x
  x = 99; // assigns to A::x
  struct x x1; // x1 has class type B::x
}
