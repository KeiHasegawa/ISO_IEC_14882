/*
 * Check if compiler generates destructor code in case of goto, break
 * and continue statement.
 */
#include <stdio.h>

struct X {
  int id;
  X(int i) : id(i) { printf("X::X(int) called %d\n", id); }
  ~X(){ printf("X::~X() called %d\n", id); }
};

int f();

void test000()
{
  printf("`test000' called\n");
  X a(0);
 label:
  X b(1);
  if ( !(f() & 1) )
    goto label;
}

void test001()
{
  printf("`test001' called\n");
  while ( 1 ){
    X a(2);
    X b(3);
    if ( f() & 1 )
      break;
    X c(4);
  }
}

void test002()
{
  printf("`test002' called\n");
  for ( int i = 0 ; i != 2 ; ++i ){
    X a(5);
    X b(6);
    if ( f() & 1 )
      continue;
    X c(7);
  }
}

int main()
{
  test000();
  test001();
  test002();
  return 0;
}

int f()
{
  static int s;
  return s++;
}
