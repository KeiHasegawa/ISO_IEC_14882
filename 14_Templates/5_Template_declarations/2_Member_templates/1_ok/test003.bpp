/*
 * A specialization of a template conversion function is referenced in the same
 * way as a non-template conversion function that converts to the same type.
 */
#include <stdio.h>

struct A {
  template <class T> operator T*();
};
template <class T> A::operator T*()
{ printf("`A::operator T*()' called\n"); return 0; }
template <> A::operator char*(){ return 0; } // specialization
template A::operator void*(); // explicit instantiation

int main()
{
  A a;
  int* ip;
  ip = a.operator int*(); // explicit call to template operator
                          // A::operator int*()
  return 0;
}
