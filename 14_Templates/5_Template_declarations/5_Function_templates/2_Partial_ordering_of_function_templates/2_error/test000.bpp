/*
 * A template is more specialized than another if, and only if, it is at least
 * as specialized as the other template and that template is not at least as
 * specialized as the first.
 */

template<class T> struct A { A(); };
template<class T> void f(T);
template<class T> void f(T*);
template<class T> void f(const T*);
template<class T> void g(T);
template<class T> void g(T&);
template<class T> void h(const T&);
template<class T> void h(A<T>&);
void m() {
  const int *p;
  f(p); // f(const T*) is more specialized than f(T) or f(T*)
  float x;
  g(x); //Ambiguous: g(T) or g(T&)
  A<int> z;
  h(z); //overload resolution selects h(A<T>&)
  const A<int> z2;
  h(z2); // h(const T&) is called because h(A<T>&) is not callable
}
