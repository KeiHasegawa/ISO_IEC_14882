/*
 * A virtual function call (10.3) uses the default arguments in the declaration
 * of the virtual function determined by the static type of the pointer or
 * reference denoting the object. An overriding function in a derived class
 * does not acquire default arguments from the function it overrides.
 */
struct A {
  virtual void f(int a = 7);
};

struct B : public A {
  void f(int a);
};

void m()
{
  B* pb = new B;
  A* pa = pb;
  pa->f(); //OK, calls pa->B::f(7)
  pb->f(); //error: wrong number of arguments for B::f()
}
