/*
 * A class can be defined within a function definition; such a class is called
 * a local class. The name of a local class is local to its enclosing scope.
 * The local class is in the scope of the enclosing scope, and has the same
 * access to names outside the function as does the enclosing function.
 * Declarations in a local class can use only type names, static variables,
 * extern variables and functions, and enumerators from the enclosing scope.
 */
int x;

void f()
{
  static int s ;
  int x;
  extern int g();
  struct local {
    int g() { return x; } // error: x is auto
    int h() { return s; } // OK
    int k() { return ::x; } // OK
    int l() { return g(); } // OK
  };
  // ...
}

local* p = 0; // error: local not in scope
