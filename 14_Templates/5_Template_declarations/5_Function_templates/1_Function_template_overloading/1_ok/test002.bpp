/*
 * Two expressions involving template parameters are considered equivalent if
 * two function definitions containing the expressions would satisfy the one
 * definition rule (3.2), except that the tokens used to name the template
 * parameters may differ as long as a token used to name a template parameter
 * in one expression is replaced by another token that names the same template
 * parameter in the other expression.
 */
#include <stdio.h>

template<int N> struct A {};

template <int I, int J> void f(A<I+J>); // #1
template <int K, int L> void f(A<K+L>); // same as #1


template <int X, int Y> void f(A<X+Y>)
{
  printf("f(A<X+Y> called\n");
}

int main()
{
  A<7> a7;
  f<3,4>(a7);
  return 0;
}
