#include <stdio.h>

struct X {
  int id;
  X(int i) : id(i) { printf("i = %d at X::X\n", id); }
  ~X(){ printf("i = %d at X::~X\n", id); }
};

int test(int n)
{
  printf("test called with %d\n", n);
  X x0(0);
  if ( n & (1 << 1) ){
    X x1(1);
    return 1;
    if ( n & (1 << 2) ){
      X x2(2);
      return 2;
    }
  }
  if ( n & (1 << 3) ){
    X x3(3);
    if ( n & (1 << 4) ){
      X x4(4);
      return 4;
    }
    return 3;
  }
  X x5(5);
  return 5;
}


int main()
{
  {
    // 0000
    int n = 0;
    test(n);
  }
  {
    // 0001
    int n = (1 << 1);
    test(n);
  }
  {
    // 0010
    int n = (1 << 2);
    test(n);
  }
  {
    // 0011
    int n = (1 << 2) | (1 << 1);
    test(n);
  }
  {
    // 0100
    int n = (1 << 3);
    test(n);
  }
  {
    // 0101
    int n = (1 << 3) | (1 << 1);
    test(n);
  }
  {
    // 0110
    int n = (1 << 3) | (1 << 2);
    test(n);
  }
  {
    // 0111
    int n = (1 << 3) | (1 << 2) | (1 << 1);
    test(n);
  }
  {
    // 1000
    int n = (1 << 4);
    test(n);
  }
  {
    // 1001
    int n = (1 << 4) | (1 << 1);
    test(n);
  }
  {
    // 1010
    int n = (1 << 4) | (1 << 2);
    test(n);
  }
  {
    // 1011
    int n = (1 << 4) | (1 << 2) | (1 << 1);
    test(n);
  }
  {
    // 1100
    int n = (1 << 4) | (1 << 3);
    test(n);
  }
  {
    // 1101
    int n = (1 << 4) | (1 << 3) | (1 << 1);
    test(n);
  }
  {
    // 1110
    int n = (1 << 4) | (1 << 3) | (1 << 2);
    test(n);
  }
  {
    // 1111
    int n = (1 << 4) | (1 << 3) | (1 << 2) | (1 << 1);
    test(n);
  }
  return 0;
}
